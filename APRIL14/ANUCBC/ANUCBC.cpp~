#include<cstdio>
#include<ctime>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<map>
#include<algorithm>
#include<stdint.h>
#include<unistd.h>
#define MOD 1000000009

using namespace std;
map<int, long long> cache;
// Function bigmod from tester's solution:
// http://discuss.codechef.com/questions/20312/chmod-editorial
inline long long bigmod(long long a, long long b, long long m)
{
	if(b == 0) return 1 % m;
	long long x = a, ans = 1;
	while(b)
	{
		if(b & 1)
			ans = (ans * x) % m;
		b >>= 1;
		x = (x * x) % m;
	}
	return ans;
}

int T, N, Q, M;
int a[100000];
long long n[100];
long long temp[100];
inline int mod(int a, int k)
{
	if (a >= 0)
		return a % k;
	return k - ((-a) % k);
}
inline void calc()
{
	int k = M;
	if(cache.count(k) > 0)
	{
		n[0] = cache[k];
		return;
	}
	memset(n, 0, k * sizeof(long long));
	n[0] = 1;
	n[mod(a[0], k)]++;
	for(int i = 1; i < N; ++i)
	{
		copy(n, n + k, temp);
		int m = mod(a[i], k);
		for(int r = 0; r < k; ++r)
		{
			/*
			temp[m] = n[m] + n[r];
			if(temp[m] >= MOD)
				temp[m] -= MOD;
			*/
			n[m] += temp[r];
			if(n[m] >= MOD)
				n[m] -= MOD;
			m++;
			if(m == k)
				m = 0;
		}
		//copy(temp, temp + k, n);
		/*printf("[ ");
		for(int j = 0; j < k; ++j)
			printf("%d ", n[j]);
		printf("]\n");*/
	}
	/*printf("M=%d [ ", M);
	for(int j = 0; j < k; ++j)
		printf("%d ", n[j]);
	printf("]\n");*/
	cache[k] = n[0]; 
}
int main()
{
	scanf("%d", &T);
	while(T--)
	{
		scanf("%d", &N);
		scanf("%d", &Q);
		for(int i = 0; i < N; ++i)
			scanf("%d", &a[i]);
		cache.clear();
		for(int i = 0; i < Q; ++i)
		{
			scanf("%d", &M);
			if (M == 1)
				printf("%lld\n", bigmod(2, N, MOD) % MOD);
			else
			{
				calc();
				printf("%lld\n", n[0]);
			}
		}
	}
	return 0;
}
